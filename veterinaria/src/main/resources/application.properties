# Driver para conectarse a la base de datos
spring.datasource.driver-class-name=org.sqlite.JDBC

# Dialecto para comunicarse con la base de datos
spring.jpa.database-platform=org.hibernate.community.dialect.SQLiteDialect

# Dónde se va a conectar a la base de datos
# En este caso la base de datos es en memoria
# spring.datasource.url=jdbc:sqlite:memory

# Si queremos que persista en un archivo
spring.datasource.url=jdbc:sqlite:src/main/resources/sqlite.db

# Especificamos el enfoque Code First
spring.jpa.hibernate.ddl-auto=update

# Mostrar los queries de SQL
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.format_sql=true
org.gradle.warning.mode=all


#SQL
## DATASOURCE (DataSourceAutoConfiguration & DataSourceProperties)
#spring.datasource.url=jdbc:mysql://localhost:3306/jpa_element_collection_demo?useSSL=false&serverTimezone=UTC&useLegacyDatetimeCode=false
#spring.datasource.username=root
#spring.datasource.password=root
#
## Hibernate
#
## The SQL dialect makes Hibernate generate better SQL for the chosen database
#spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.MySQL5InnoDBDialect
#
## Hibernate ddl auto (create, create-drop, validate, update)
#spring.jpa.hibernate.ddl-auto = update
#
#logging.level.org.hibernate.SQL=DEBUG
#logging.level.org.hibernate.type=TRACE